{
  "version": 3,
  "sources": ["../../../../../Modules/MovieDB/Movie/MoviePage.ts", "../../../../../Modules/MovieDB/Movie/MovieGrid.ts", "../../../../../Modules/ServerTypes/MovieDB/MovieColumns.ts", "../../../../../Modules/ServerTypes/MovieDB/MovieForm.ts", "../../../../../Modules/ServerTypes/MovieDB/MovieRow.ts", "../../../../../Modules/ServerTypes/MovieDB/MovieService.ts", "../../../../../Modules/MovieDB/Movie/MovieDialog.ts"],
  "sourcesContent": ["\uFEFFimport { initFullHeightGridPage } from '@serenity-is/corelib/q';\r\nimport { MovieGrid } from './MovieGrid';\r\n\r\nexport default function pageInit() {\n    initFullHeightGridPage(new MovieGrid($('#GridDiv')).element);\n}", "import { Decorators, EntityGrid, QuickSearchField } from '@serenity-is/corelib';\r\nimport { MovieColumns, MovieRow, MovieService } from '@/ServerTypes/MovieDB';\r\nimport { MovieDialog } from './MovieDialog';\r\n\r\n@Decorators.registerClass('MovieTutorial.MovieDB.MovieGrid')\nexport class MovieGrid extends EntityGrid<MovieRow, any> {\n    protected getColumnsKey() { return MovieColumns.columnsKey; }\n    protected getDialogType() { return MovieDialog; }\n    protected getRowDefinition() { return MovieRow; }\n    protected getService() { return MovieService.baseUrl; }\n\n    constructor(container: JQuery) {\n        super(container);\n    }\n\n    protected getQuickSearchFields(): QuickSearchField[] {\r\n        const fld = MovieRow.Fields;\r\n        return [\r\n            { name: \"\", title: \"all\" },\r\n            { name: fld.Description, title: \"description\" },\r\n            { name: fld.Storyline, title: \"storyline\" },\r\n            { name: fld.Year, title: \"year\" }\r\n        ];\r\n    }\n\n}", "\uFEFFexport class MovieColumns {\n    static columnsKey = 'MovieDB.Movie';\n}", "\uFEFFimport { StringEditor, TextAreaEditor, IntegerEditor, DateEditor, PrefixedContext } from \"@serenity-is/corelib\";\nimport { initFormType } from \"@serenity-is/corelib/q\";\n\nexport interface MovieForm {\n    Title: StringEditor;\n    Description: TextAreaEditor;\n    Storyline: TextAreaEditor;\n    Year: IntegerEditor;\n    ReleaseDate: DateEditor;\n    Runtime: IntegerEditor;\n}\n\nexport class MovieForm extends PrefixedContext {\n    static formKey = 'MovieDB.Movie';\n    private static init: boolean;\n\n    constructor(prefix: string) {\n        super(prefix);\n\n        if (!MovieForm.init)  {\n            MovieForm.init = true;\n\n            var w0 = StringEditor;\n            var w1 = TextAreaEditor;\n            var w2 = IntegerEditor;\n            var w3 = DateEditor;\n\n            initFormType(MovieForm, [\n                'Title', w0,\n                'Description', w1,\n                'Storyline', w1,\n                'Year', w2,\n                'ReleaseDate', w3,\n                'Runtime', w2\n            ]);\n        }\n    }\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\n\nexport interface MovieRow {\n    MovieId?: number;\n    Title?: string;\n    Description?: string;\n    Storyline?: string;\n    Year?: number;\n    ReleaseDate?: string;\n    Runtime?: number;\n}\n\nexport abstract class MovieRow {\n    static readonly idProperty = 'MovieId';\n    static readonly nameProperty = 'Title';\n    static readonly localTextPrefix = 'MovieDB.Movie';\n    static readonly deletePermission = 'Administration:General';\n    static readonly insertPermission = 'Administration:General';\n    static readonly readPermission = 'Administration:General';\n    static readonly updatePermission = 'Administration:General';\n\n    static readonly Fields = fieldsProxy<MovieRow>();\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\nimport { MovieRow } from \"./MovieRow\";\n\nexport namespace MovieService {\n    export const baseUrl = 'MovieDB/Movie';\n\n    export declare function Create(request: SaveRequest<MovieRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Update(request: SaveRequest<MovieRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MovieRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MovieRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\n\n    export const Methods = {\n        Create: \"MovieDB/Movie/Create\",\n        Update: \"MovieDB/Movie/Update\",\n        Delete: \"MovieDB/Movie/Delete\",\n        Retrieve: \"MovieDB/Movie/Retrieve\",\n        List: \"MovieDB/Movie/List\"\n    } as const;\n\n    [\n        'Create', \n        'Update', \n        'Delete', \n        'Retrieve', \n        'List'\n    ].forEach(x => {\n        (<any>MovieService)[x] = function (r, s, o) {\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\n        };\n    });\n}", "\uFEFFimport { Decorators, EntityDialog } from '@serenity-is/corelib';\r\nimport { MovieForm, MovieRow, MovieService } from '@/ServerTypes/MovieDB';\r\n\r\n@Decorators.registerClass('MovieTutorial.MovieDB.MovieDialog')\nexport class MovieDialog extends EntityDialog<MovieRow, any> {\n    protected getFormKey() { return MovieForm.formKey; }\n    protected getRowDefinition() { return MovieRow; }\n    protected getService() { return MovieService.baseUrl; }\n\n    protected form = new MovieForm(this.idPrefix);\n}"],
  "mappings": "mFAAC,IAAAA,EAAuC,SCAxC,IAAAC,EAAyD,SCAjD,IAAMC,EAAN,KAAmB,CAE3B,EAFcC,EAAAD,EAAA,gBAAAA,EACH,WAAa,gBCDvB,IAAAE,EAAyF,SAC1FC,EAA6B,SAWtB,IAAMC,EAAN,cAAwB,iBAAgB,CAI3C,YAAYC,EAAgB,CAGxB,GAFA,MAAMA,CAAM,EAER,CAACD,EAAU,KAAO,CAClBA,EAAU,KAAO,GAEjB,IAAIE,EAAK,eACLC,EAAK,iBACLC,EAAK,gBACLC,EAAK,gBAET,gBAAaL,EAAW,CACpB,QAASE,EACT,cAAeC,EACf,YAAaA,EACb,OAAQC,EACR,cAAeC,EACf,UAAWD,CACf,CAAC,CACL,CACJ,CACJ,EAzBaE,EAANN,EAAMO,EAAAD,EAAA,aAAAA,EACF,QAAU,gBCbpB,IAAAE,EAA4B,SAYtB,IAAeC,EAAf,KAAwB,CAU/B,EAVsBC,EAAAD,EAAA,YAAAA,EACF,WAAa,UADXA,EAEF,aAAe,QAFbA,EAGF,gBAAkB,gBAHhBA,EAIF,iBAAmB,yBAJjBA,EAKF,iBAAmB,yBALjBA,EAMF,eAAiB,yBANfA,EAOF,iBAAmB,yBAPjBA,EASF,UAAS,eAAsB,ECrBlD,IAAAE,EAAuK,SAGvJC,OACAA,EAAA,QAAU,gBAQVA,EAAA,QAAU,CACnB,OAAQ,uBACR,OAAQ,uBACR,OAAQ,uBACR,SAAU,yBACV,KAAM,oBACV,EAEA,CACI,SACA,SACA,SACA,WACA,MACJ,EAAE,QAAQC,GAAK,CACLD,EAAcC,CAAC,EAAI,SAAUC,EAAGC,EAAGC,EAAG,CACxC,SAAO,kBAAeJ,EAAA,QAAU,IAAMC,EAAGC,EAAGC,EAAGC,CAAC,CACpD,CACJ,CAAC,IA3BYJ,MAAA,KCHhB,IAAAK,EAAyC,SAInC,IAAMC,EAAN,cAA0B,cAA4B,CAAtD,kCAKH,KAAU,KAAO,IAAIC,EAAU,KAAK,QAAQ,EAJlC,YAAa,CAAE,OAAOA,EAAU,OAAS,CACzC,kBAAmB,CAAE,OAAOC,CAAU,CACtC,YAAa,CAAE,OAAOC,EAAa,OAAS,CAG1D,EANaC,EAAAJ,EAAA,eAAAA,EAANK,EAAA,CADN,aAAW,cAAc,mCAAmC,GAChDL,GLCN,IAAMM,EAAN,cAAwB,YAA0B,CAC3C,eAAgB,CAAE,OAAOC,EAAa,UAAY,CAClD,eAAgB,CAAE,OAAOC,CAAa,CACtC,kBAAmB,CAAE,OAAOC,CAAU,CACtC,YAAa,CAAE,OAAOC,EAAa,OAAS,CAEtD,YAAYC,EAAmB,CAC3B,MAAMA,CAAS,CACnB,CAEU,sBAA2C,CACjD,IAAMC,EAAMH,EAAS,OACrB,MAAO,CACH,CAAE,KAAM,GAAI,MAAO,KAAM,EACzB,CAAE,KAAMG,EAAI,YAAa,MAAO,aAAc,EAC9C,CAAE,KAAMA,EAAI,UAAW,MAAO,WAAY,EAC1C,CAAE,KAAMA,EAAI,KAAM,MAAO,MAAO,CACpC,CACJ,CAEJ,EApBaC,EAAAP,EAAA,aAAAA,EAANQ,EAAA,CADN,aAAW,cAAc,iCAAiC,GAC9CR,GDFE,SAARS,GAA4B,IAC/B,0BAAuB,IAAIC,EAAU,EAAE,UAAU,CAAC,EAAE,OAAO,CAC/D,CAFwBC,EAAAF,EAAA",
  "names": ["import_q", "import_corelib", "MovieColumns", "__name", "import_corelib", "import_q", "_MovieForm", "prefix", "w0", "w1", "w2", "w3", "MovieForm", "__name", "import_q", "MovieRow", "__name", "import_q", "MovieService", "x", "r", "s", "o", "import_corelib", "MovieDialog", "MovieForm", "MovieRow", "MovieService", "__name", "__decorateClass", "MovieGrid", "MovieColumns", "MovieDialog", "MovieRow", "MovieService", "container", "fld", "__name", "__decorateClass", "pageInit", "MovieGrid", "__name"]
}
