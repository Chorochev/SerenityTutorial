{
  "version": 3,
  "sources": ["external-global:Serenity.Extensions", "../../../Modules/ServerTypes/MovieDB/GenreColumns.ts", "../../../Modules/ServerTypes/MovieDB/GenreRow.ts", "../../../Modules/ServerTypes/MovieDB/GenreService.ts", "../../../Modules/ServerTypes/MovieDB/MovieCastColumns.ts", "../../../Modules/ServerTypes/MovieDB/MovieCastRow.ts", "../../../Modules/ServerTypes/MovieDB/MovieCastService.ts", "../../../Modules/MovieDB/Movie/GenreListFormatter.ts", "../../../Modules/ServerTypes/MovieDB/Gender.ts", "../../../Modules/ServerTypes/MovieDB/GenreForm.ts", "../../../Modules/ServerTypes/MovieDB/MovieCastForm.ts", "../../../Modules/ServerTypes/MovieDB/MovieForm.ts", "../../../Modules/MovieDB/MovieCast/MovieCastEditor.ts", "../../../Modules/MovieDB/MovieCast/MovieCastEditDialog.ts", "../../../Modules/ServerTypes/MovieDB/MovieKind.ts", "../../../Modules/ServerTypes/MovieDB/MovieGenresColumns.ts", "../../../Modules/ServerTypes/MovieDB/MovieGenresForm.ts", "../../../Modules/ServerTypes/MovieDB/MovieGenresRow.ts", "../../../Modules/ServerTypes/MovieDB/MovieGenresService.ts", "../../../Modules/ServerTypes/MovieDB/MovieRow.ts", "../../../Modules/ServerTypes/MovieDB/MovieService.ts", "../../../Modules/ServerTypes/MovieDB/PersonColumns.ts", "../../../Modules/ServerTypes/MovieDB/PersonForm.ts", "../../../Modules/MovieDB/Person/PersonMovieGrid.ts", "../../../Modules/ServerTypes/MovieDB/PersonMovieColumns.ts", "../../../Modules/ServerTypes/MovieDB/PersonRow.ts", "../../../Modules/ServerTypes/MovieDB/PersonService.ts", "../../../Modules/ServerTypes/MovieDB/MovieColumns.ts"],
  "sourcesContent": ["module.exports = Serenity.Extensions;", "\uFEFFexport class GenreColumns {\r\n    static columnsKey = 'MovieDB.Genre';\r\n}", "\uFEFFimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface GenreRow {\r\n    GenreId?: number;\r\n    Name?: string;\r\n}\r\n\r\nexport abstract class GenreRow {\r\n    static readonly idProperty = 'GenreId';\r\n    static readonly nameProperty = 'Name';\r\n    static readonly localTextPrefix = 'MovieDB.Genre';\r\n    static readonly lookupKey = 'MovieDB.Genre';\r\n\r\n    /** @deprecated use getLookupAsync instead */\r\n    static getLookup() { return getLookup<GenreRow>('MovieDB.Genre') }\r\n    static async getLookupAsync() { return getLookupAsync<GenreRow>('MovieDB.Genre') }\r\n\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<GenreRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\r\nimport { GenreRow } from \"./GenreRow\";\r\n\r\nexport namespace GenreService {\r\n    export const baseUrl = 'MovieDB/Genre';\r\n\r\n    export declare function Create(request: SaveRequest<GenreRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<GenreRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<GenreRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<GenreRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"MovieDB/Genre/Create\",\r\n        Update: \"MovieDB/Genre/Update\",\r\n        Delete: \"MovieDB/Genre/Delete\",\r\n        Retrieve: \"MovieDB/Genre/Retrieve\",\r\n        List: \"MovieDB/Genre/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>GenreService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFexport class MovieCastColumns {\r\n    static columnsKey = 'MovieDB.MovieCast';\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface MovieCastRow {\r\n    MovieCastId?: number;\r\n    MovieId?: number;\r\n    PersonId?: number;\r\n    Character?: string;\r\n    MovieTitle?: string;\r\n    MovieYear?: number;\r\n    PersonFirstName?: string;\r\n    PersonLastname?: string;\r\n    PersonFullname?: string;\r\n}\r\n\r\nexport abstract class MovieCastRow {\r\n    static readonly idProperty = 'MovieCastId';\r\n    static readonly nameProperty = 'Character';\r\n    static readonly localTextPrefix = 'MovieDB.MovieCast';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<MovieCastRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\r\nimport { MovieCastRow } from \"./MovieCastRow\";\r\n\r\nexport namespace MovieCastService {\r\n    export const baseUrl = 'MovieDB/MovieCast';\r\n\r\n    export declare function Create(request: SaveRequest<MovieCastRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<MovieCastRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MovieCastRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MovieCastRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"MovieDB/MovieCast/Create\",\r\n        Update: \"MovieDB/MovieCast/Update\",\r\n        Delete: \"MovieDB/MovieCast/Delete\",\r\n        Retrieve: \"MovieDB/MovieCast/Retrieve\",\r\n        List: \"MovieDB/MovieCast/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>MovieCastService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "import { Decorators, Formatter } from \"@serenity-is/corelib\";\r\nimport { htmlEncode } from \"@serenity-is/corelib/q\";\r\nimport { FormatterContext } from \"@serenity-is/sleekgrid\";\r\nimport { GenreRow } from \"../../ServerTypes/MovieDB\";\r\n\r\n@Decorators.registerFormatter(\"MovieTutorial.MovieDB.GenreListFormatter\")\r\nexport class GenreListFormatter implements Formatter {\r\n    format(ctx: FormatterContext) {\r\n        let idList = ctx.value as number[];\r\n        if (!idList || !idList.length)\r\n            return \"\";\r\n\r\n        let byId = GenreRow.getLookup().itemById;\r\n\r\n        return idList.map(x => {\r\n            let g = byId[x];\r\n            if (!g)\r\n                return x.toString();\r\n\r\n            return htmlEncode(g.Name);\r\n        }).join(\", \");\r\n    }\r\n}", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\r\n\r\nexport enum Gender {\r\n    Male = 1,\r\n    Female = 2\r\n}\r\nDecorators.registerEnumType(Gender, 'MovieTutorial.MovieDB.Gender', 'MovieDB.Gender');", "\uFEFFimport { StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface GenreForm {\r\n    Name: StringEditor;\r\n}\r\n\r\nexport class GenreForm extends PrefixedContext {\r\n    static formKey = 'MovieDB.Genre';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!GenreForm.init)  {\r\n            GenreForm.init = true;\r\n\r\n            var w0 = StringEditor;\r\n\r\n            initFormType(GenreForm, [\r\n                'Name', w0\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { LookupEditor, StringEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface MovieCastForm {\r\n    PersonId: LookupEditor;\r\n    Character: StringEditor;\r\n}\r\n\r\nexport class MovieCastForm extends PrefixedContext {\r\n    static formKey = 'MovieDB.MovieCast';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!MovieCastForm.init)  {\r\n            MovieCastForm.init = true;\r\n\r\n            var w0 = LookupEditor;\r\n            var w1 = StringEditor;\r\n\r\n            initFormType(MovieCastForm, [\r\n                'PersonId', w0,\r\n                'Character', w1\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { StringEditor, TextAreaEditor, ImageUploadEditor, MultipleImageUploadEditor, IntegerEditor, DateEditor, LookupEditor, EnumEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { MovieCastEditor } from \"@/MovieDB/MovieCast/MovieCastEditor\";\r\nimport { MovieKind } from \"./MovieKind\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface MovieForm {\r\n    Title: StringEditor;\r\n    Description: TextAreaEditor;\r\n    CastList: MovieCastEditor;\r\n    PrimaryImage: ImageUploadEditor;\r\n    GalleryImages: MultipleImageUploadEditor;\r\n    Storyline: TextAreaEditor;\r\n    Year: IntegerEditor;\r\n    ReleaseDate: DateEditor;\r\n    Runtime: IntegerEditor;\r\n    GenreList: LookupEditor;\r\n    Kind: EnumEditor;\r\n}\r\n\r\nexport class MovieForm extends PrefixedContext {\r\n    static formKey = 'MovieDB.Movie';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!MovieForm.init)  {\r\n            MovieForm.init = true;\r\n\r\n            var w0 = StringEditor;\r\n            var w1 = TextAreaEditor;\r\n            var w2 = MovieCastEditor;\r\n            var w3 = ImageUploadEditor;\r\n            var w4 = MultipleImageUploadEditor;\r\n            var w5 = IntegerEditor;\r\n            var w6 = DateEditor;\r\n            var w7 = LookupEditor;\r\n            var w8 = EnumEditor;\r\n\r\n            initFormType(MovieForm, [\r\n                'Title', w0,\r\n                'Description', w1,\r\n                'CastList', w2,\r\n                'PrimaryImage', w3,\r\n                'GalleryImages', w4,\r\n                'Storyline', w1,\r\n                'Year', w5,\r\n                'ReleaseDate', w6,\r\n                'Runtime', w5,\r\n                'GenreList', w7,\r\n                'Kind', w8\r\n            ]);\r\n        }\r\n    }\r\n}\r\n\r\n[MovieKind]; // referenced types", "import { Decorators } from \"@serenity-is/corelib\";\r\nimport { GridEditorBase } from \"@serenity-is/extensions\";\r\nimport { MovieCastRow, PersonRow } from \"../../ServerTypes/MovieDB\";\r\nimport { MovieCastEditDialog } from \"./MovieCastEditDialog\";\r\n\r\n@Decorators.registerEditor(\"MovieTutorial.MovieDB.MovieCastEditor\")\r\nexport class MovieCastEditor extends GridEditorBase<MovieCastRow> {\r\n    protected getColumnsKey() { return \"MovieDB.MovieCast\"; }\r\n    protected getDialogType() { return MovieCastEditDialog; }\r\n    protected getLocalTextPrefix() { return MovieCastRow.localTextPrefix; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\r\n\r\n    protected getAddButtonCaption() {\r\n        return \"Add\";\r\n    }\r\n\r\n    protected validateEntity(row: MovieCastRow, id: number) {\r\n        if (!super.validateEntity(row, id))\r\n            return false;\r\n\r\n        row.PersonFullname = PersonRow.getLookup()\r\n            .itemById[row.PersonId].Fullname;\r\n\r\n        return true;\r\n    }\r\n}", "import { Decorators } from \"@serenity-is/corelib\";\r\nimport { GridEditorDialog } from \"@serenity-is/extensions\";\r\nimport { MovieCastForm, MovieCastRow } from \"../../ServerTypes/MovieDB\";\r\n\r\n@Decorators.registerClass(\"MovieTutorial.MovieDB.MovieCastEditDialog\")\r\nexport class MovieCastEditDialog extends GridEditorDialog<MovieCastRow> {\r\n    protected getFormKey() { return MovieCastForm.formKey; }\r\n    protected getNameProperty() { return MovieCastRow.nameProperty; }\r\n    protected getLocalTextPrefix() { return MovieCastRow.localTextPrefix; }\r\n\r\n    protected form: MovieCastForm = new MovieCastForm(this.idPrefix);\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n}", "\uFEFFimport { Decorators } from \"@serenity-is/corelib\";\r\n\r\nexport enum MovieKind {\r\n    Film = 1,\r\n    TvSeries = 2,\r\n    MiniSeries = 3\r\n}\r\nDecorators.registerEnumType(MovieKind, 'MovieTutorial.MovieDB.MovieKind', 'MovieDB.MovieKind');", "\uFEFFexport class MovieGenresColumns {\r\n    static columnsKey = 'MovieDB.MovieGenres';\r\n}", "\uFEFFimport { IntegerEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface MovieGenresForm {\r\n    MovieId: IntegerEditor;\r\n    GenreId: IntegerEditor;\r\n}\r\n\r\nexport class MovieGenresForm extends PrefixedContext {\r\n    static formKey = 'MovieDB.MovieGenres';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!MovieGenresForm.init)  {\r\n            MovieGenresForm.init = true;\r\n\r\n            var w0 = IntegerEditor;\r\n\r\n            initFormType(MovieGenresForm, [\r\n                'MovieId', w0,\r\n                'GenreId', w0\r\n            ]);\r\n        }\r\n    }\r\n}", "\uFEFFimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface MovieGenresRow {\r\n    MovieGenreId?: number;\r\n    MovieId?: number;\r\n    GenreId?: number;\r\n    MovieTitle?: string;\r\n    GenreName?: string;\r\n}\r\n\r\nexport abstract class MovieGenresRow {\r\n    static readonly idProperty = 'MovieGenreId';\r\n    static readonly localTextPrefix = 'MovieDB.MovieGenres';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<MovieGenresRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\r\nimport { MovieGenresRow } from \"./MovieGenresRow\";\r\n\r\nexport namespace MovieGenresService {\r\n    export const baseUrl = 'MovieDB/MovieGenres';\r\n\r\n    export declare function Create(request: SaveRequest<MovieGenresRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<MovieGenresRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MovieGenresRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MovieGenresRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"MovieDB/MovieGenres/Create\",\r\n        Update: \"MovieDB/MovieGenres/Update\",\r\n        Delete: \"MovieDB/MovieGenres/Delete\",\r\n        Retrieve: \"MovieDB/MovieGenres/Retrieve\",\r\n        List: \"MovieDB/MovieGenres/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>MovieGenresService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { MovieKind } from \"./MovieKind\";\r\nimport { MovieCastRow } from \"./MovieCastRow\";\r\nimport { fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface MovieRow {\r\n    MovieId?: number;\r\n    Title?: string;\r\n    Description?: string;\r\n    Storyline?: string;\r\n    Year?: number;\r\n    ReleaseDate?: string;\r\n    Runtime?: number;\r\n    Kind?: MovieKind;\r\n    GenreList?: number[];\r\n    CastList?: MovieCastRow[];\r\n    PrimaryImage?: string;\r\n    GalleryImages?: string;\r\n}\r\n\r\nexport abstract class MovieRow {\r\n    static readonly idProperty = 'MovieId';\r\n    static readonly nameProperty = 'Title';\r\n    static readonly localTextPrefix = 'MovieDB.Movie';\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<MovieRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\r\nimport { MovieRow } from \"./MovieRow\";\r\n\r\nexport namespace MovieService {\r\n    export const baseUrl = 'MovieDB/Movie';\r\n\r\n    export declare function Create(request: SaveRequest<MovieRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<MovieRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<MovieRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<MovieRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"MovieDB/Movie/Create\",\r\n        Update: \"MovieDB/Movie/Update\",\r\n        Delete: \"MovieDB/Movie/Delete\",\r\n        Retrieve: \"MovieDB/Movie/Retrieve\",\r\n        List: \"MovieDB/Movie/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>MovieService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { Gender } from \"./Gender\";\r\n\r\nexport class PersonColumns {\r\n    static columnsKey = 'MovieDB.Person';\r\n}\r\n\r\n[Gender]; // referenced types", "\uFEFFimport { StringEditor, ImageUploadEditor, MultipleImageUploadEditor, DateEditor, EnumEditor, IntegerEditor, PrefixedContext } from \"@serenity-is/corelib\";\r\nimport { Gender } from \"./Gender\";\r\nimport { PersonMovieGrid } from \"@/MovieDB/Person/PersonMovieGrid\";\r\nimport { initFormType } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface PersonForm {\r\n    FirstName: StringEditor;\r\n    Lastname: StringEditor;\r\n    PrimaryImage: ImageUploadEditor;\r\n    GalleryImages: MultipleImageUploadEditor;\r\n    BirthDate: DateEditor;\r\n    BirthPlace: StringEditor;\r\n    Gender: EnumEditor;\r\n    Height: IntegerEditor;\r\n    MoviesGrid: PersonMovieGrid;\r\n}\r\n\r\nexport class PersonForm extends PrefixedContext {\r\n    static formKey = 'MovieDB.Person';\r\n    private static init: boolean;\r\n\r\n    constructor(prefix: string) {\r\n        super(prefix);\r\n\r\n        if (!PersonForm.init)  {\r\n            PersonForm.init = true;\r\n\r\n            var w0 = StringEditor;\r\n            var w1 = ImageUploadEditor;\r\n            var w2 = MultipleImageUploadEditor;\r\n            var w3 = DateEditor;\r\n            var w4 = EnumEditor;\r\n            var w5 = IntegerEditor;\r\n            var w6 = PersonMovieGrid;\r\n\r\n            initFormType(PersonForm, [\r\n                'FirstName', w0,\r\n                'Lastname', w0,\r\n                'PrimaryImage', w1,\r\n                'GalleryImages', w2,\r\n                'BirthDate', w3,\r\n                'BirthPlace', w0,\r\n                'Gender', w4,\r\n                'Height', w5,\r\n                'MoviesGrid', w6\r\n            ]);\r\n        }\r\n    }\r\n}\r\n\r\n[Gender]; // referenced types", "import { Decorators, EntityGrid } from \"@serenity-is/corelib\";\r\nimport { MovieCastRow, MovieCastService } from \"../../ServerTypes/MovieDB\";\r\n\r\n@Decorators.registerEditor(\"MovieTutorial.MovieDB.PersonMovieGrid\")\r\nexport class PersonMovieGrid extends EntityGrid<MovieCastRow, any>\r\n{\r\n    protected getColumnsKey() { return \"MovieDB.PersonMovie\"; }\r\n    protected getIdProperty() { return MovieCastRow.idProperty; }\r\n    protected getLocalTextPrefix() { return MovieCastRow.localTextPrefix; }\r\n    protected getService() { return MovieCastService.baseUrl; }\r\n\r\n    constructor(container: JQuery) {\r\n        super(container);\r\n    }\r\n\r\n    protected getButtons() {\r\n        return null;\r\n    }\r\n\r\n    protected getInitialTitle() {\r\n        return null;\r\n    }\r\n\r\n    protected usePager() {\r\n        return false;\r\n    }\r\n\r\n    protected getGridCanLoad() {\r\n        return this.personID != null;\r\n    }\r\n\r\n    private _personID: number;\r\n\r\n    get personID() {\r\n        return this._personID;\r\n    }\r\n\r\n    set personID(value: number) {\r\n        if (this._personID != value) {\r\n            this._personID = value;\r\n            this.setEquality(MovieCastRow.Fields.PersonId, value);\r\n            this.refresh();\r\n        }\r\n    }\r\n}", "\uFEFFexport class PersonMovieColumns {\r\n    static columnsKey = 'MovieDB.PersonMovie';\r\n}", "\uFEFFimport { Gender } from \"./Gender\";\r\nimport { getLookup, getLookupAsync, fieldsProxy } from \"@serenity-is/corelib/q\";\r\n\r\nexport interface PersonRow {\r\n    PersonId?: number;\r\n    FirstName?: string;\r\n    Lastname?: string;\r\n    Fullname?: string;\r\n    BirthDate?: string;\r\n    BirthPlace?: string;\r\n    Gender?: Gender;\r\n    Height?: number;\r\n    PrimaryImage?: string;\r\n    GalleryImages?: string;\r\n}\r\n\r\nexport abstract class PersonRow {\r\n    static readonly idProperty = 'PersonId';\r\n    static readonly nameProperty = 'Fullname';\r\n    static readonly localTextPrefix = 'MovieDB.Person';\r\n    static readonly lookupKey = 'MovieDB.Person';\r\n\r\n    /** @deprecated use getLookupAsync instead */\r\n    static getLookup() { return getLookup<PersonRow>('MovieDB.Person') }\r\n    static async getLookupAsync() { return getLookupAsync<PersonRow>('MovieDB.Person') }\r\n\r\n    static readonly deletePermission = 'Administration:General';\r\n    static readonly insertPermission = 'Administration:General';\r\n    static readonly readPermission = 'Administration:General';\r\n    static readonly updatePermission = 'Administration:General';\r\n\r\n    static readonly Fields = fieldsProxy<PersonRow>();\r\n}", "\uFEFFimport { SaveRequest, SaveResponse, ServiceOptions, DeleteRequest, DeleteResponse, RetrieveRequest, RetrieveResponse, ListRequest, ListResponse, serviceRequest } from \"@serenity-is/corelib/q\";\r\nimport { PersonRow } from \"./PersonRow\";\r\n\r\nexport namespace PersonService {\r\n    export const baseUrl = 'MovieDB/Person';\r\n\r\n    export declare function Create(request: SaveRequest<PersonRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Update(request: SaveRequest<PersonRow>, onSuccess?: (response: SaveResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Delete(request: DeleteRequest, onSuccess?: (response: DeleteResponse) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function Retrieve(request: RetrieveRequest, onSuccess?: (response: RetrieveResponse<PersonRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n    export declare function List(request: ListRequest, onSuccess?: (response: ListResponse<PersonRow>) => void, opt?: ServiceOptions<any>): JQueryXHR;\r\n\r\n    export const Methods = {\r\n        Create: \"MovieDB/Person/Create\",\r\n        Update: \"MovieDB/Person/Update\",\r\n        Delete: \"MovieDB/Person/Delete\",\r\n        Retrieve: \"MovieDB/Person/Retrieve\",\r\n        List: \"MovieDB/Person/List\"\r\n    } as const;\r\n\r\n    [\r\n        'Create', \r\n        'Update', \r\n        'Delete', \r\n        'Retrieve', \r\n        'List'\r\n    ].forEach(x => {\r\n        (<any>PersonService)[x] = function (r, s, o) {\r\n            return serviceRequest(baseUrl + '/' + x, r, s, o);\r\n        };\r\n    });\r\n}", "\uFEFFimport { GenreListFormatter } from \"@/MovieDB/Movie/GenreListFormatter\";\r\n\r\nexport class MovieColumns {\r\n    static columnsKey = 'MovieDB.Movie';\r\n}\r\n\r\n[GenreListFormatter]; // referenced types"],
  "mappings": "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",
  "names": ["require_Serenity", "__commonJSMin", "exports", "module", "GenreColumns", "__name", "import_q", "GenreRow", "__async", "__name", "import_q", "GenreService", "x", "r", "s", "o", "MovieCastColumns", "__name", "import_q", "MovieCastRow", "__name", "import_q", "MovieCastService", "x", "r", "s", "o", "import_corelib", "import_q", "import_corelib", "Gender", "import_corelib", "import_q", "_GenreForm", "prefix", "w0", "GenreForm", "__name", "import_corelib", "import_q", "_MovieCastForm", "prefix", "w0", "w1", "MovieCastForm", "__name", "import_corelib", "import_corelib", "import_extensions", "import_corelib", "import_extensions", "MovieCastEditDialog", "MovieCastForm", "MovieCastRow", "__name", "__decorateClass", "MovieCastEditor", "MovieCastEditDialog", "MovieCastRow", "container", "row", "id", "PersonRow", "__name", "__decorateClass", "import_corelib", "MovieKind", "import_q", "_MovieForm", "prefix", "w0", "w1", "w2", "MovieCastEditor", "w3", "w4", "w5", "w6", "w7", "w8", "MovieForm", "__name", "MovieGenresColumns", "__name", "import_corelib", "import_q", "_MovieGenresForm", "prefix", "w0", "MovieGenresForm", "__name", "import_q", "MovieGenresRow", "__name", "import_q", "MovieGenresService", "x", "r", "s", "o", "import_q", "MovieRow", "__name", "import_q", "MovieService", "x", "r", "s", "o", "PersonColumns", "__name", "import_corelib", "import_corelib", "PersonMovieGrid", "container", "MovieCastRow", "MovieCastService", "value", "__name", "__decorateClass", "import_q", "_PersonForm", "prefix", "w0", "w1", "w2", "w3", "w4", "w5", "w6", "PersonMovieGrid", "PersonForm", "__name", "PersonMovieColumns", "__name", "import_q", "PersonRow", "__async", "__name", "import_q", "PersonService", "x", "r", "s", "o", "GenreListFormatter", "ctx", "idList", "byId", "GenreRow", "x", "g", "__name", "__decorateClass", "MovieColumns", "__name"]
}
